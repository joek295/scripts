#!/bin/bash

range=($(echo {1..100}))
SUGGEST=0
SEARCH='grep -w'

# shuffle function based on Knufth-Fisher-Yayes shuffle algorithm
# http://mywiki.wooledge.org/BashFAQ/026 thank you!
# takes an array as input through 'shuffle ARRAY[@]', outputs arr[@]
shuffle() {
   local i tmp size max rand
   arr=("${!1}") # retrieve array from $1
   # $RANDOM % (i+1) is biased because of the limited range of $RANDOM
   # Compensate by using a range which is a multiple of the array size.
   size=${#arr[*]}
   max=$(( 32768 / size * size ))

   for ((i=size-1; i>0; i--)); do
      while (( (rand=$RANDOM) >= max )); do :; done
      rand=$(( rand % (i+1) ))
      tmp=${arr[i]} arr[i]=${arr[rand]} arr[rand]=$tmp
   done
}

# if one argument, get a random number from the range and print that file line.
if [[ $# -eq 1 ]]; then
   FILE=$1
   shuffle range[@] && SUGGEST=${arr[1]}
fi

# PRINT SUGGESTED LINE


# It Is No Longer This Simple
#if [[ $# -gt 2 ]]; then
   #echo "Too many arguments."
   #echo "Use 'cosmo' for a random suggestion, or 'cosmo [1-100]' for a specific one."
   #exit 1
#fi

#if [[ $3 == "--fuzzy" ]]; then
  #SEARCH='grep -i'
#fi
#
#if [[ $3 == "-i" ]]; then
  #SEARCH='grep -iw'
#fi
#
#if [[ $1 == "--search" ]]; then
  #$SEARCH $2 $tao | shuf -n 1
  #exit 0
#fi
#
#if [[ $1 == "--all" ]]; then
  #if [[ $# -gt 3 ]]; then
    #exit 1
  #fi
  #if [[ $# -gt 1 ]]; then
    #$SEARCH $2 $tao
    #exit 0
  #fi
  #less $tao
#fi
#
#if [[ $1 == "--count" ]]; then
  #SEARCH=$SEARCH'c'
  #if [[ $# -gt 1 ]]; then
    #$SEARCH $2 $tao
    #exit 0
  #fi
  #exit 1
#fi
#
#if [[ $1 == "--help" ]]; then
  #echo "Usage: cosmo [OPTION] [SEARCH TERM]"
  #echo "       cosmo [1-100]"
  #echo "cosmo returns a random sex suggestion taken from a list from the Cosmopolitan UK website."
  #echo ""
  #echo "OPTIONS:"
  #echo "--search     returns a random suggestion containing the search term given"
  #echo "--all        returns all suggestions containing the search term given"
  #echo "--count      returns a count of how many suggestions contain a search term"
  #echo "--fuzzy      do not limit searches to exact matches. cosmo's default functionality is case-sensitive and matches only exact words. Thus, 'cosmo the' will not return suggestions containing 'then' or 'there'. 'cosmo --fuzzy' turns this option off"
  #echo "-i           make matches case insensitive"
  #exit 0
#fi
#
#if [[ $# -eq 1 ]]; then
   #for n in ${range[@]}; do
      #[[ $1 -eq $n ]] && SUGGEST=$1
   #done
   #if [[ $SUGGEST -eq 0 ]]; then
      #echo "Cosmo only has a limited number of suggestions."
      #echo "If this is not enough for you, there is always toilet-paper bondage."
      #exit 1
   #fi
#fi
#
## trying to test whether run from terminal. If not, send to notification daemon
## currently doesn't work.
#if [ ! -t 0 ]; then
  #grep ^$SUGGEST: $tao | xargs notify-send
  #exit 0
#fi
#
#grep ^$SUGGEST: $tao
#
#exit 0
