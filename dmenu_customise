#!/usr/bin/env python

import os
from subprocess import Popen, PIPE, STDOUT

# dmenu constants
DMENU_CACHE = os.path.expanduser('~/.dmenu_cache')
DMENU_COMMAND = [
            'dmenu', 
            '-nb', '#151515',
            '-nf', '#888888',
            '-fn', '-misc-fixed-medium-*-normal-*-14-*-*-*-*-*-*-*'
        ]

# our custom commands
commands = {
# a comma separated list of commands in the form
# 'command': 'full command'
'xsession': 'gvim ~/.xsession', 'ob-configure': 'gvim ~/.config/openbox/rc.xml', 'fvwm-configure': 'gvim ~/fvwm/config', 'ratpoison-configure': 'gvim ~/.ratpoisonrc', 'scrotwm-configure': 'gvim ~/.scrotwm.conf', 'fluxbox': 'flux_restart.sh'
    }
# check if local cache exists
if not os.path.exists(DMENU_CACHE):
    os.system('dmenu_path > /dev/null')

# load command cache and combine with our commands
with open(DMENU_CACHE, 'r') as raw_file:
    system_commands = raw_file.read()

output = commands.keys()
output.sort()

# create a process
process = Popen(DMENU_COMMAND, stdout=PIPE, stdin=PIPE, stderr=STDOUT)
selection = process.communicate(input='{0}\n{1}'.format('\n'.join(output), system_commands))[0]

# get command based on selection and execute it
if selection.strip() != '':
    command = commands[selection] if commands.has_key(selection) else selection
    os.system(command)
